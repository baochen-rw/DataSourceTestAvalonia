// Copyright 2008-2021 by Rightware. All rights reserved.

#ifndef KZ_GL_GRAPHICS_ADAPTER_HPP
# error Do not include this file directly. Include system/graphics_api/gl/gl_graphics_adapter.hpp instead.
#endif

// OpenGL ES 2.0
virtual void activeTexture(unsigned int texture);
virtual void attachShader(unsigned int program, unsigned int shader);
virtual void bindAttribLocation(unsigned int program, unsigned int index, kzString name);
virtual void bindBuffer(unsigned int target, unsigned int buffer);
virtual void bindFramebuffer(unsigned int target, unsigned int framebuffer);
virtual void bindRenderbuffer(unsigned int target, unsigned int renderbuffer);
virtual void bindTexture(unsigned int target, unsigned int texture);
virtual void blendColor(float red, float green, float blue, float alpha);
virtual void blendEquation(unsigned int mode);
virtual void blendEquationSeparate(unsigned int modeRGB, unsigned int modeAlpha);
virtual void blendFunc(unsigned int sfactor, unsigned int dfactor);
virtual void blendFuncSeparate(unsigned int srcRGB, unsigned int dstRGB, unsigned int srcAlpha, unsigned int dstAlpha);
virtual void bufferData(unsigned int target, int size, const void* data, unsigned int usage);
virtual void bufferSubData(unsigned int target, int offset, int size, const void* data);
virtual unsigned int checkFramebufferStatus(unsigned int target);
virtual void clear(unsigned int mask);
virtual void clearColor(float red, float green, float blue, float alpha);
virtual void clearDepthf(float depth);
virtual void clearStencil(int s);
virtual void colorMask(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha);
virtual void compileShader(unsigned int shader);
virtual void compressedTexImage2D(unsigned int target, int level, unsigned int internalformat, int width, int height, int border, int imageSize, const void* data);
virtual unsigned int tryCompressedTexImage2D(unsigned int target, int level, unsigned int internalformat, int width, int height, int border, int imageSize, const void* data);
virtual void compressedTexSubImage2D(unsigned int target, int level, int xoffset, int yoffset, int width, int height, unsigned int format, int imageSize, const void* data);
virtual unsigned int tryCompressedTexSubImage2D(unsigned int target, int level, int xoffset, int yoffset, int width, int height, unsigned int format, int imageSize, const void* data);
virtual void copyTexImage2D(unsigned int target, int level, unsigned int internalformat, int x, int y, int width, int height, int border);
virtual void copyTexSubImage2D(unsigned int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
virtual unsigned int createProgram();
virtual unsigned int createShader(unsigned int type);
virtual void cullFace(unsigned int mode);
virtual void deleteBuffers(int n, const unsigned int* buffers);
virtual void deleteFramebuffers(int n, const unsigned int* framebuffers);
virtual void deleteProgram(unsigned int program);
virtual void deleteRenderbuffers(int n, const unsigned int* renderbuffers);
virtual void deleteShader(unsigned int shader);
virtual void deleteTextures(int n, const unsigned int* textures);
virtual void depthFunc(unsigned int func);
virtual void depthMask(unsigned char flag);
virtual void depthRangef(float zNear, float zFar);
virtual void detachShader(unsigned int program, unsigned int shader);
virtual void disable(unsigned int cap);
virtual void disableVertexAttribArray(unsigned int index);
virtual void drawArrays(unsigned int mode, int first, int count);
virtual void drawElements(unsigned int mode, int count, unsigned int type, const void* indices);
virtual void enable(unsigned int cap);
virtual void enableVertexAttribArray(unsigned int index);
virtual void finish();
virtual void flush();
virtual void framebufferRenderbuffer(unsigned int target, unsigned int attachment, unsigned int renderbuffertarget, unsigned int renderbuffer);
virtual void framebufferTexture2D(unsigned int target, unsigned int attachment, unsigned int textarget, unsigned int texture, int level);
virtual void frontFace(unsigned int mode);
virtual void genBuffers(int n, unsigned int* buffers);
virtual void generateMipmap(unsigned int target);
virtual unsigned int tryGenerateMipmap(unsigned int target);
virtual void genFramebuffers(int n, unsigned int* framebuffers);
virtual void genRenderbuffers(int n, unsigned int* renderbuffers);
virtual void genTextures(int n, unsigned int* textures);
virtual void getActiveAttrib(unsigned int program, unsigned int index, int bufsize, int* length, int* size, unsigned int* type, kzMutableString name);
virtual void getActiveUniform(unsigned int program, unsigned int index, int bufsize, int* length, int* size, unsigned int* type, kzMutableString name);
virtual void getAttachedShaders(unsigned int program, int maxcount, int* count, unsigned int* shaders);
virtual int getAttribLocation(unsigned int program, kzString name);
virtual void getBooleanv(unsigned int pname, unsigned char* params);
virtual void getBufferParameteriv(unsigned int target, unsigned int pname, int* params);
virtual unsigned int getError();
virtual void getFloatv(unsigned int pname, float* params);
virtual void getFramebufferAttachmentParameteriv(unsigned int target, unsigned int attachment, unsigned int pname, int* params);
virtual void getIntegerv(unsigned int pname, int* params);
virtual unsigned int tryGetIntegerv(unsigned int pname, int* params);
virtual void getProgramiv(unsigned int program, unsigned int pname, int* params);
virtual void getProgramInfoLog(unsigned int program, int bufsize, int* length, kzMutableString infolog);
virtual void getRenderbufferParameteriv(unsigned int target, unsigned int pname, int* params);
virtual void getShaderiv(unsigned int shader, unsigned int pname, int* params);
virtual void getShaderInfoLog(unsigned int shader, int bufsize, int* length, kzMutableString infolog);
virtual void getShaderPrecisionFormat(unsigned int shadertype, unsigned int precisiontype, int* range, int* precision);
virtual void getShaderSource(unsigned int shader, int bufsize, int* length, kzMutableString source);
virtual const unsigned char* getString(unsigned int name);
virtual void getTexParameterfv(unsigned int target, unsigned int pname, float* params);
virtual void getTexParameteriv(unsigned int target, unsigned int pname, int* params);
virtual void getUniformfv(unsigned int program, int location, float* params);
virtual void getUniformiv(unsigned int program, int location, int* params);
virtual int getUniformLocation(unsigned int program, kzString name);
virtual void getVertexAttribfv(unsigned int index, unsigned int pname, float* params);
virtual void getVertexAttribiv(unsigned int index, unsigned int pname, int* params);
virtual void getVertexAttribPointerv(unsigned int index, unsigned int pname, void** pointer);
virtual void hint(unsigned int target, unsigned int mode);
virtual unsigned char isBuffer(unsigned int buffer);
virtual unsigned char isEnabled(unsigned int cap);
virtual unsigned char isFramebuffer(unsigned int framebuffer);
virtual unsigned char isProgram(unsigned int program);
virtual unsigned char isRenderbuffer(unsigned int renderbuffer);
virtual unsigned char isShader(unsigned int shader);
virtual unsigned char isTexture(unsigned int texture);
virtual void lineWidth(float width);
virtual void linkProgram(unsigned int program);
virtual void pixelStorei(unsigned int pname, int param);
virtual void polygonOffset(float factor, float units);
virtual void readPixels(int x, int y, int width, int height, unsigned int format, unsigned int type, void* pixels);
virtual void releaseShaderCompiler();
virtual void renderbufferStorage(unsigned int target, unsigned int internalformat, int width, int height);
virtual void sampleCoverage(float value, unsigned char invert);
virtual void scissor(int x, int y, int width, int height);
virtual void shaderBinary(int n, const unsigned int* shaders, unsigned int binaryformat, const void* binary, int length);
virtual unsigned int tryShaderBinary(int n, const unsigned int* shaders, unsigned int binaryformat, const void* binary, int length);
virtual void shaderSource(unsigned int shader, int count, const char* const* string_, const int* length);
virtual void stencilFunc(unsigned int func, int ref, unsigned int mask);
virtual void stencilFuncSeparate(unsigned int face, unsigned int func, int ref, unsigned int mask);
virtual void stencilMask(unsigned int mask);
virtual void stencilMaskSeparate(unsigned int face, unsigned int mask);
virtual void stencilOp(unsigned int fail, unsigned int zfail, unsigned int zpass);
virtual void stencilOpSeparate(unsigned int face, unsigned int fail, unsigned int zfail, unsigned int zpass);
virtual void texImage2D(unsigned int target, int level, unsigned int internalformat, int width, int height, int border, unsigned int format, unsigned int type, const void* pixels);
virtual unsigned int tryTexImage2D(unsigned int target, int level, unsigned int internalformat, int width, int height, int border, unsigned int format, unsigned int type, const void* pixels);
virtual void texParameterf(unsigned int target, unsigned int pname, float param);
virtual void texParameterfv(unsigned int target, unsigned int pname, const float* params);
virtual void texParameteri(unsigned int target, unsigned int pname, int param);
virtual void texParameteriv(unsigned int target, unsigned int pname, const int* params);
virtual void texSubImage2D(unsigned int target, int level, int xoffset, int yoffset, int width, int height, unsigned int format, unsigned int type, const void* pixels);
virtual unsigned int tryTexSubImage2D(unsigned int target, int level, int xoffset, int yoffset, int width, int height, unsigned int format, unsigned int type, const void* pixels);
virtual void uniform1f(int location, float x);
virtual void uniform1fv(int location, int count, const float* v);
virtual void uniform1i(int location, int x);
virtual void uniform1iv(int location, int count, const int* v);
virtual void uniform2f(int location, float x, float y);
virtual void uniform2fv(int location, int count, const float* v);
virtual void uniform2i(int location, int x, int y);
virtual void uniform2iv(int location, int count, const int* v);
virtual void uniform3f(int location, float x, float y, float z);
virtual void uniform3fv(int location, int count, const float* v);
virtual void uniform3i(int location, int x, int y, int z);
virtual void uniform3iv(int location, int count, const int* v);
virtual void uniform4f(int location, float x, float y, float z, float w);
virtual void uniform4fv(int location, int count, const float* v);
virtual void uniform4i(int location, int x, int y, int z, int w);
virtual void uniform4iv(int location, int count, const int* v);
virtual void uniformMatrix2fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix3fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix4fv(int location, int count, unsigned char transpose, const float* v);
virtual void useProgram(unsigned int program);
virtual void validateProgram(unsigned int program);
virtual void vertexAttrib1f(unsigned int indx, float x);
virtual void vertexAttrib1fv(unsigned int indx, const float* values);
virtual void vertexAttrib2f(unsigned int indx, float x, float y);
virtual void vertexAttrib2fv(unsigned int indx, const float* values);
virtual void vertexAttrib3f(unsigned int indx, float x, float y, float z);
virtual void vertexAttrib3fv(unsigned int indx, const float* values);
virtual void vertexAttrib4f(unsigned int indx, float x, float y, float z, float w);
virtual void vertexAttrib4fv(unsigned int indx, const float* values);
virtual void vertexAttribPointer(unsigned int index, int size, unsigned int type, unsigned char normalized, int stride, const void* pointer);
virtual void viewport(int x, int y, int width, int height);

// OpenGL ES 3.0
virtual void readBuffer(unsigned int src);
virtual void drawRangeElements(unsigned int mode, unsigned int start, unsigned int end, int count, unsigned int type, const void* indices);
virtual void texImage3D(unsigned int target, int level, int internalformat, int width, int height, int depth, int border, unsigned int format, unsigned int type, const void* pixels);
virtual unsigned int tryTexImage3D(unsigned int target, int level, int internalformat, int width, int height, int depth, int border, unsigned int format, unsigned int type, const void* pixels);
virtual void texSubImage3D(unsigned int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned int format, unsigned int type, const void* pixels);
virtual void copyTexSubImage3D(unsigned int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
virtual void compressedTexImage3D(unsigned int target, int level, unsigned int internalformat, int width, int height, int depth, int border, int imageSize, const void* data);
virtual unsigned int tryCompressedTexImage3D(unsigned int target, int level, unsigned int internalformat, int width, int height, int depth, int border, int imageSize, const void* data);
virtual void compressedTexSubImage3D(unsigned int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, unsigned int format, int imageSize, const void* data);
virtual void genQueries(int n, unsigned int* ids);
virtual void deleteQueries(int n, const unsigned int* ids);
virtual unsigned char isQuery(unsigned int id);
virtual void beginQuery(unsigned int target, unsigned int id);
virtual void endQuery(unsigned int target);
virtual void getQueryiv(unsigned int target, unsigned int pname, int* params);
virtual void getQueryObjectuiv(unsigned int id, unsigned int pname, unsigned int* params);
virtual unsigned char unmapBuffer(unsigned int target);
virtual void getBufferPointerv(unsigned int target, unsigned int pname, void** params);
virtual void drawBuffers(int n, const unsigned int* bufs);
virtual void uniformMatrix2x3fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix3x2fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix2x4fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix4x2fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix3x4fv(int location, int count, unsigned char transpose, const float* value);
virtual void uniformMatrix4x3fv(int location, int count, unsigned char transpose, const float* value);
virtual void blitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, unsigned int mask, unsigned int filter);
virtual void renderbufferStorageMultisample(unsigned int target, int samples, unsigned int internalformat, int width, int height);
virtual void framebufferTextureLayer(unsigned int target, unsigned int attachment, unsigned int texture, int level, int layer);
virtual void* mapBufferRange(unsigned int target, ptrdiff_t offset, ptrdiff_t length, unsigned int access);
virtual void flushMappedBufferRange(unsigned int target, ptrdiff_t offset, ptrdiff_t length);
virtual void bindVertexArray(unsigned int array_);
virtual void deleteVertexArrays(int n, const unsigned int* arrays);
virtual void genVertexArrays(int n, unsigned int* arrays);
virtual unsigned char isVertexArray(unsigned int array_);
virtual void getIntegeri_v(unsigned int target, unsigned int index, int* data);
virtual void beginTransformFeedback(unsigned int primitiveMode);
virtual void endTransformFeedback();
virtual void bindBufferRange(unsigned int target, unsigned int index, unsigned int buffer, ptrdiff_t offset, ptrdiff_t size);
virtual void bindBufferBase(unsigned int target, unsigned int index, unsigned int buffer);
virtual void transformFeedbackVaryings(unsigned int program, int count, const char* const* varyings, unsigned int bufferMode);
virtual void getTransformFeedbackVarying(unsigned int program, unsigned int index, int bufSize, int* length, int* size, unsigned int* type, char* name);
virtual void vertexAttribIPointer(unsigned int index, int size, unsigned int type, int stride, const void* pointer);
virtual void getVertexAttribIiv(unsigned int index, unsigned int pname, int* params);
virtual void getVertexAttribIuiv(unsigned int index, unsigned int pname, unsigned int* params);
virtual void vertexAttribI4i(unsigned int index, int x, int y, int z, int w);
virtual void vertexAttribI4ui(unsigned int index, unsigned int x, unsigned int y, unsigned int z, unsigned int w);
virtual void vertexAttribI4iv(unsigned int index, const int* v);
virtual void vertexAttribI4uiv(unsigned int index, const unsigned int* v);
virtual void getUniformuiv(unsigned int program, int location, unsigned int* params);
virtual int getFragDataLocation(unsigned int program, const char* name);
virtual void uniform1ui(int location, unsigned int v0);
virtual void uniform2ui(int location, unsigned int v0, unsigned int v1);
virtual void uniform3ui(int location, unsigned int v0, unsigned int v1, unsigned int v2);
virtual void uniform4ui(int location, unsigned int v0, unsigned int v1, unsigned int v2, unsigned int v3);
virtual void uniform1uiv(int location, int count, const unsigned int* value);
virtual void uniform2uiv(int location, int count, const unsigned int* value);
virtual void uniform3uiv(int location, int count, const unsigned int* value);
virtual void uniform4uiv(int location, int count, const unsigned int* value);
virtual void clearBufferiv(unsigned int buffer, int drawbuffer, const int* value);
virtual void clearBufferuiv(unsigned int buffer, int drawbuffer, const unsigned int* value);
virtual void clearBufferfv(unsigned int buffer, int drawbuffer, const float* value);
virtual void clearBufferfi(unsigned int buffer, int drawbuffer, float depth, int stencil);
virtual const char* getStringi(unsigned int name, unsigned int index);
virtual void copyBufferSubData(unsigned int readTarget, unsigned int writeTarget, ptrdiff_t readOffset, ptrdiff_t writeOffset, ptrdiff_t size);
virtual void getUniformIndices(unsigned int program, int uniformCount, const char* const* uniformNames, unsigned int* uniformIndices);
virtual void getActiveUniformsiv(unsigned int program, int uniformCount, const unsigned int* uniformIndices, unsigned int pname, int* params);
virtual unsigned int getUniformBlockIndex(unsigned int program, const char* uniformBlockName);
virtual void getActiveUniformBlockiv(unsigned int program, unsigned int uniformBlockIndex, unsigned int pname, int* params);
virtual void getActiveUniformBlockName(unsigned int program, unsigned int uniformBlockIndex, int bufSize, int* length, char* uniformBlockName);
virtual void uniformBlockBinding(unsigned int program, unsigned int uniformBlockIndex, unsigned int uniformBlockBinding);
virtual void drawArraysInstanced(unsigned int mode, int first, int count, int instancecount);
virtual void drawElementsInstanced(unsigned int mode, int count, unsigned int type, const void* indices, int instancecount);
virtual kzsGLsync fenceSync(unsigned int condition, unsigned int flags);
virtual unsigned char isSync(kzsGLsync sync);
virtual void deleteSync(kzsGLsync sync);
virtual unsigned int clientWaitSync(kzsGLsync sync, unsigned int flags, kzU64 timeout);
virtual void waitSync(kzsGLsync sync, unsigned int flags, kzU64 timeout);
virtual void getInteger64v(unsigned int pname, kzS64* data);
virtual void getSynciv(kzsGLsync sync, unsigned int pname, int bufSize, int* length, int* values);
virtual void getInteger64i_v(unsigned int target, unsigned int index, kzS64* data);
virtual void getBufferParameteri64v(unsigned int target, unsigned int pname, kzS64* params);
virtual void genSamplers(int count, unsigned int* samplers);
virtual void deleteSamplers(int count, const unsigned int* samplers);
virtual unsigned char isSampler(unsigned int sampler);
virtual void bindSampler(unsigned int unit, unsigned int sampler);
virtual void samplerParameteri(unsigned int sampler, unsigned int pname, int param);
virtual void samplerParameteriv(unsigned int sampler, unsigned int pname, const int* param);
virtual void samplerParameterf(unsigned int sampler, unsigned int pname, float param);
virtual void samplerParameterfv(unsigned int sampler, unsigned int pname, const float* param);
virtual void getSamplerParameteriv(unsigned int sampler, unsigned int pname, int* params);
virtual void getSamplerParameterfv(unsigned int sampler, unsigned int pname, float* params);
virtual void vertexAttribDivisor(unsigned int index, unsigned int divisor);
virtual void bindTransformFeedback(unsigned int target, unsigned int id);
virtual void deleteTransformFeedbacks(int n, const unsigned int* ids);
virtual void genTransformFeedbacks(int n, unsigned int* ids);
virtual unsigned char isTransformFeedback(unsigned int id);
virtual void pauseTransformFeedback();
virtual void resumeTransformFeedback();
virtual void getProgramBinary(unsigned int program, int bufSize, int* length, unsigned int* binaryFormat, void* binary);
virtual void programBinary(unsigned int program, unsigned int binaryFormat, const void* binary, int length);
virtual unsigned int tryProgramBinary(unsigned int program, unsigned int binaryFormat, const void* binary, int length);
virtual void programParameteri(unsigned int program, unsigned int pname, int value);
virtual void invalidateFramebuffer(unsigned int target, int numAttachments, const unsigned int* attachments);
virtual void invalidateSubFramebuffer(unsigned int target, int numAttachments, const unsigned int* attachments, int x, int y, int width, int height);
virtual void texStorage2D(unsigned int target, int levels, unsigned int internalformat, int width, int height);
virtual unsigned int tryTexStorage2D(unsigned int target, int levels, unsigned int internalformat, int width, int height);
virtual void texStorage3D(unsigned int target, int levels, unsigned int internalformat, int width, int height, int depth);
virtual unsigned int tryTexStorage3D(unsigned int target, int levels, unsigned int internalformat, int width, int height, int depth);
virtual void getInternalformativ(unsigned int target, unsigned int internalformat, unsigned int pname, int bufSize, int* params);

// OpenGL ES 3.1
virtual unsigned int tryTexStorage2DMultisample(unsigned int target, int samples, unsigned int internalformat, int width, int height, unsigned char fixedsamplelocations);

virtual void dispatchCompute(unsigned int num_groups_x, unsigned int num_groups_y, unsigned int num_groups_z);
virtual void dispatchComputeIndirect(int indirect);
virtual void drawArraysIndirect(unsigned int mode, const void* indirect);
virtual void drawElementsIndirect(unsigned int mode, unsigned int type, const void* indirect);
virtual void framebufferParameteri(unsigned int target, unsigned int pname, int param);
virtual void getFramebufferParameteriv(unsigned int target, unsigned int pname, int* params);
virtual void getProgramInterfaceiv(unsigned int program, unsigned int programInterface, unsigned int pname, int* params);
virtual unsigned int getProgramResourceIndex(unsigned int program, unsigned int programInterface, const char* name);
virtual void getProgramResourceName(unsigned int program, unsigned int programInterface, unsigned int index, int bufSize, int* length, char* name);
virtual void getProgramResourceiv(unsigned int program, unsigned int programInterface, unsigned int index, int propCount, const unsigned int* props, int bufSize, int* length, int* params);
virtual int getProgramResourceLocation(unsigned int program, unsigned int programInterface, const char* name);
virtual void useProgramStages(unsigned int pipeline, unsigned int stages, unsigned int program);
virtual void activeShaderProgram(unsigned int pipeline, unsigned int program);
virtual unsigned int createShaderProgramv(unsigned int type, int count, const char* const* strings);
virtual void bindProgramPipeline(unsigned int pipeline);
virtual void deleteProgramPipelines(int n, const unsigned int* pipelines);
virtual void genProgramPipelines(int n, unsigned int* pipelines);
virtual unsigned char isProgramPipeline(unsigned int pipeline);
virtual void getProgramPipelineiv(unsigned int pipeline, unsigned int pname, int* params);
virtual void programUniform1i(unsigned int program, int location, int v0);
virtual void programUniform2i(unsigned int program, int location, int v0, int v1);
virtual void programUniform3i(unsigned int program, int location, int v0, int v1, int v2);
virtual void programUniform4i(unsigned int program, int location, int v0, int v1, int v2, int v3);
virtual void programUniform1ui(unsigned int program, int location, unsigned int v0);
virtual void programUniform2ui(unsigned int program, int location, unsigned int v0, unsigned int v1);
virtual void programUniform3ui(unsigned int program, int location, unsigned int v0, unsigned int v1, unsigned int v2);
virtual void programUniform4ui(unsigned int program, int location, unsigned int v0, unsigned int v1, unsigned int v2, unsigned int v3);
virtual void programUniform1f(unsigned int program, int location, float v0);
virtual void programUniform2f(unsigned int program, int location, float v0, float v1);
virtual void programUniform3f(unsigned int program, int location, float v0, float v1, float v2);
virtual void programUniform4f(unsigned int program, int location, float v0, float v1, float v2, float v3);
virtual void programUniform1iv(unsigned int program, int location, int count, const int* value);
virtual void programUniform2iv(unsigned int program, int location, int count, const int* value);
virtual void programUniform3iv(unsigned int program, int location, int count, const int* value);
virtual void programUniform4iv(unsigned int program, int location, int count, const int* value);
virtual void programUniform1uiv(unsigned int program, int location, int count, const unsigned int* value);
virtual void programUniform2uiv(unsigned int program, int location, int count, const unsigned int* value);
virtual void programUniform3uiv(unsigned int program, int location, int count, const unsigned int* value);
virtual void programUniform4uiv(unsigned int program, int location, int count, const unsigned int* value);
virtual void programUniform1fv(unsigned int program, int location, int count, const float* value);
virtual void programUniform2fv(unsigned int program, int location, int count, const float* value);
virtual void programUniform3fv(unsigned int program, int location, int count, const float* value);
virtual void programUniform4fv(unsigned int program, int location, int count, const float* value);
virtual void programUniformMatrix2fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix3fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix4fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix2x3fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix3x2fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix2x4fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix4x2fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix3x4fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void programUniformMatrix4x3fv(unsigned int program, int location, int count, unsigned char transpose, const float* value);
virtual void validateProgramPipeline(unsigned int pipeline);
virtual void getProgramPipelineInfoLog(unsigned int pipeline, int bufSize, int* length, char* infoLog);
virtual void bindImageTexture(unsigned int unit, unsigned int texture, int level, unsigned char layered, int layer, unsigned int access, unsigned int format);
virtual void getBooleani_v(unsigned int target, unsigned int index, unsigned char* data);
virtual void memoryBarrier(unsigned int barriers);
virtual void memoryBarrierByRegion(unsigned int barriers);
virtual void texStorage2DMultisample(unsigned int target, int samples, unsigned int internalformat, int width, int height, unsigned char fixedsamplelocations);
virtual void getMultisamplefv(unsigned int pname, unsigned int index, float* val);
virtual void sampleMaski(unsigned int maskNumber, unsigned int mask);
virtual void getTexLevelParameteriv(unsigned int target, int level, unsigned int pname, int* params);
virtual void getTexLevelParameterfv(unsigned int target, int level, unsigned int pname, float* params);
virtual void bindVertexBuffer(unsigned int bindingindex, unsigned int buffer, int offset, int stride);
virtual void vertexAttribFormat(unsigned int attribindex, int size, unsigned int type, unsigned char normalized, unsigned int relativeoffset);
virtual void vertexAttribIFormat(unsigned int attribindex, int size, unsigned int type, unsigned int relativeoffset);
virtual void vertexAttribBinding(unsigned int attribindex, unsigned int bindingindex);
virtual void vertexBindingDivisor(unsigned int bindingindex, unsigned int divisor);

// OpenGL ES 3.2
virtual unsigned int tryTexStorage3DMultisample(unsigned int target, int samples, unsigned int internalformat, int width, int height, int depth, unsigned char fixedsamplelocations);
virtual void blendBarrier();
virtual void copyImageSubData(unsigned int srcName, unsigned int srcTarget, int srcLevel, int srcX, int srcY, int srcZ, unsigned int dstName, unsigned int dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
virtual void debugMessageControl(unsigned int source, unsigned int type, unsigned int severity,
                                 int count, const unsigned int* ids, unsigned char enabled);
virtual void debugMessageInsert(unsigned int source, unsigned int type, unsigned int id,
                                unsigned int severity, int length, const char* buf);
virtual void debugMessageCallback(void* callback, const void* userParam);
virtual unsigned int getDebugMessageLog(unsigned int count, int bufSize, unsigned int* sources,
                                        unsigned int* types, unsigned int* ids, unsigned int* severities,
                                        int* lengths, char* messageLog);
virtual void pushDebugGroup(unsigned int source, unsigned int id, int length, const char* message);
virtual void popDebugGroup();
virtual void objectLabel(unsigned int identifier, unsigned int name, int length, const char* label);
virtual void getObjectLabel(unsigned int identifier, unsigned int name, int bufSize, int* length, char* label);
virtual void objectPtrLabel(const void* ptr, int length, const char* label);
virtual void getObjectPtrLabel(const void* ptr, int bufSize, int* length, char* label);
virtual void getPointerv(unsigned int pname, void* *params);
virtual void enablei(unsigned int target, unsigned int index);
virtual void disablei(unsigned int target, unsigned int index);
virtual void blendEquationi(unsigned int buf, unsigned int mode);
virtual void blendEquationSeparatei(unsigned int buf, unsigned int modeRGB, unsigned int modeAlpha);
virtual void blendFunci(unsigned int buf, unsigned int src, unsigned int dst);
virtual void blendFuncSeparatei(unsigned int buf, unsigned int srcRGB, unsigned int dstRGB, unsigned int srcAlpha, unsigned int dstAlpha);
virtual void colorMaski(unsigned int index, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
virtual unsigned char isEnabledi(unsigned int target, unsigned int index);
virtual void drawElementsBaseVertex(unsigned int mode, int count, unsigned int type, const void* indices, int basevertex);
virtual void drawRangeElementsBaseVertex(unsigned int mode, unsigned int start, unsigned int end, int count, unsigned int type, const void* indices, int basevertex);
virtual void drawElementsInstancedBaseVertex(unsigned int mode, int count, unsigned int type, const void* indices, int instancecount, int basevertex);
virtual void framebufferTexture(unsigned int target, unsigned int attachment, unsigned int texture, int level);
virtual void primitiveBoundingBox(float minX, float minY, float minZ, float minW, float maxX, float maxY, float maxZ, float maxW);
virtual unsigned int getGraphicsResetStatus();
virtual void readnPixels(int x, int y, int width, int height, unsigned int format, unsigned int type, int bufSize, void* data);
virtual void getnUniformfv(unsigned int program, int location, int bufSize, float* params);
virtual void getnUniformiv(unsigned int program, int location, int bufSize, int* params);
virtual void getnUniformuiv(unsigned int program, int location, int bufSize, unsigned int* params);
virtual void minSampleShading(float value);
virtual void patchParameteri(unsigned int pname, int value);
virtual void texParameterIiv(unsigned int target, unsigned int pname, const int* params);
virtual void texParameterIuiv(unsigned int target, unsigned int pname, const unsigned int* params);
virtual void getTexParameterIiv(unsigned int target, unsigned int pname, int* params);
virtual void getTexParameterIuiv(unsigned int target, unsigned int pname, unsigned int* params);
virtual void samplerParameterIiv(unsigned int sampler, unsigned int pname, const int* param);
virtual void samplerParameterIuiv(unsigned int sampler, unsigned int pname, const unsigned int* param);
virtual void getSamplerParameterIiv(unsigned int sampler, unsigned int pname, int* params);
virtual void getSamplerParameterIuiv(unsigned int sampler, unsigned int pname, unsigned int* params);
virtual void texBuffer(unsigned int target, unsigned int internalformat, unsigned int buffer);
virtual void texBufferRange(unsigned int target, unsigned int internalformat, unsigned int buffer, int offset, int size);
virtual void texStorage3DMultisample(unsigned int target, int samples, unsigned int internalformat, int width, int height, int depth, unsigned char fixedsamplelocations);
